"""Add account_sequence to Comment

Revision ID: d9c07b8ad056
Revises: 
Create Date: 2025-10-23 22:32:06.513350

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd9c07b8ad056'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('work_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.Column('marketing_product_id', sa.Integer(), nullable=True),
    sa.Column('keyword_text', sa.String(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('cafe_id', sa.Integer(), nullable=True),
    sa.Column('completed_post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['marketing_accounts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['cafe_id'], ['target_cafes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['completed_post_id'], ['marketing_posts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['marketing_product_id'], ['marketing_products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['worker_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_work_tasks_id'), 'work_tasks', ['id'], unique=False)
    op.add_column('users', sa.Column('daily_quota', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'daily_quota')
    op.drop_index(op.f('ix_work_tasks_id'), table_name='work_tasks')
    op.drop_table('work_tasks')
    # ### end Alembic commands ###
